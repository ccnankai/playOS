
/LocalRun/wendong.song/diyos/playOS/build/source/loader/loader.elf:     file format elf32-i386
/LocalRun/wendong.song/diyos/playOS/build/source/loader/loader.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000800

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x0000080a memsz 0x0000080a flags r-x
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000000a  00000800  00000800  00000800  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000029  00000000  00000000  0000080a  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000040  00000000  00000000  00000838  2**3
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000005d  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000040  00000000  00000000  000008d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000d9  00000000  00000000  00000915  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  0000002c  00000000  00000000  000009f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000017a  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000800 l    d  .text	00000000 .text
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 loader_16.c
00000000 l    df *ABS*	00000000 loader_32.c
00000803 g     F .text	00000007 loader_entry
00000800 g       .text	00000000 _start
0000180a g       .text	00000000 __bss_start
0000180a g       .text	00000000 _edata
0000180c g       .text	00000000 _end



Disassembly of section .text:

00000800 <_start>:
 	.text
	.global _start
	.extern loader_entry
_start:
	
 800:	e9 00 00             	jmp    803 <loader_entry>

00000803 <loader_entry>:
__asm__(".code16gcc");

void loader_entry(void)
{
 803:	66 55                	push   %ebp
 805:	66 89 e5             	mov    %esp,%ebp
    for(;;){}
 808:	eb fe                	jmp    808 <loader_entry+0x5>
